{"ast":null,"code":"const API_BASE = \"http://127.0.0.1:5000\";\nexport const analyzeSentiment = async text => {\n  const response = await fetch(`${API_BASE}/analyze`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      text\n    })\n  });\n  return response.json();\n};\nexport const fetchHistory = async () => {\n  const response = await fetch(`${API_BASE}/history`);\n  return response.json();\n};\nexport const loginUser = async (username, password) => {\n  const response = await fetch(`${API_BASE}/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  const data = await response.json();\n  return data.token;\n};\nexport const registerUser = async (username, password) => {\n  const response = await fetch(`${API_BASE}/auth/signup`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  // Await response.json() only once\n  const data = await response;\n\n  // Log the parsed response\n  console.log(data.json());\n  return response.json();\n};","map":{"version":3,"names":["API_BASE","analyzeSentiment","text","response","fetch","method","headers","body","JSON","stringify","json","fetchHistory","loginUser","username","password","data","token","registerUser","console","log"],"sources":["/Users/vijayendrasai/Documents/Programming/Projects/Sentiment-Analysis-Dashboard/frontend-react/src/api.js"],"sourcesContent":["const API_BASE = \"http://127.0.0.1:5000\";\n\nexport const analyzeSentiment = async (text) => {\n  const response = await fetch(`${API_BASE}/analyze`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ text }),\n  });\n  return response.json();\n};\n\nexport const fetchHistory = async () => {\n  const response = await fetch(`${API_BASE}/history`);\n  return response.json();\n};\n\nexport const loginUser = async (username, password) => {\n  const response = await fetch(`${API_BASE}/auth/login`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ username, password }),\n  });\n  const data = await response.json();\n  return data.token;\n};\n\nexport const registerUser = async (username, password) => {\n  const response = await fetch(`${API_BASE}/auth/signup`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ username, password }),\n  });\n  // Await response.json() only once\n  const data = await response;\n\n  // Log the parsed response\n  console.log(data.json());\n  return response.json();\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAuB;AAExC,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,IAAI,IAAK;EAC9C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,UAAU,EAAE;IAClDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP;IAAK,CAAC;EAC/B,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,UAAU,CAAC;EACnD,OAAOG,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACrD,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,aAAa,EAAE;IACrDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEI,QAAQ;MAAEC;IAAS,CAAC;EAC7C,CAAC,CAAC;EACF,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACO,IAAI,CAAC,CAAC;EAClC,OAAOK,IAAI,CAACC,KAAK;AACnB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOJ,QAAQ,EAAEC,QAAQ,KAAK;EACxD,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,cAAc,EAAE;IACtDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEI,QAAQ;MAAEC;IAAS,CAAC;EAC7C,CAAC,CAAC;EACF;EACA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ;;EAE3B;EACAe,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACL,IAAI,CAAC,CAAC,CAAC;EACxB,OAAOP,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}