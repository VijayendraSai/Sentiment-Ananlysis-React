{"ast":null,"code":"var _jsxFileName = \"/Users/vijayendrasai/Documents/Programming/Projects/Sentiment-Analysis-Dashboard/frontend-react/src/components/SentimentCharts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { PieChart, Pie, Cell, Tooltip, BarChart, Bar, XAxis, YAxis, CartesianGrid, Legend } from \"recharts\";\nimport { fetchHistory } from \"../api\"; // Import API call function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentimentCharts = () => {\n  _s();\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    const loadHistory = async () => {\n      try {\n        console.log(\"Inside handleHistory\");\n        const data = await fetchHistory();\n        console.log(\"Fetched data:\", data);\n        if (Array.isArray(data)) {\n          setHistory(data);\n        } else {\n          console.error(\"Expected array, but got\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching history:\", error);\n      }\n    };\n    loadHistory();\n  }, []);\n  if (!history || history.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center mt-4\",\n      children: \"No sentiment data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Count occurrences of each sentiment\n  const sentimentCounts = history.reduce((acc, item) => {\n    acc[item.sentiment_label] = (acc[item.sentiment_label] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Prepare Pie Chart Data\n  const pieData = Object.keys(sentimentCounts).map(key => ({\n    name: key,\n    value: sentimentCounts[key]\n  }));\n\n  // Assign Colors for Pie Chart\n  const COLORS = {\n    Positive: \"#4CAF50\",\n    // Green\n    Neutral: \"#FFC107\",\n    // Yellow\n    Negative: \"#F44336\" // Red\n  };\n\n  // Prepare Histogram Data (Sentiment Score Ranges)\n  const bins = [0, 0.2, 0.4, 0.6, 0.8, 1.0];\n  const histogramData = bins.map((bin, index) => ({\n    range: `${bin.toFixed(1)} - ${bins[index + 1] ? bins[index + 1].toFixed(1) : \"1.0\"}`,\n    count: history.filter(item => item.sentiment_score >= bin && item.sentiment_score < (bins[index + 1] || 1.01)).length\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Sentiment Analysis Charts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"Sentiment Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n        width: 400,\n        height: 300,\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: pieData,\n          cx: \"50%\",\n          cy: \"50%\",\n          outerRadius: 100,\n          fill: \"#8884d8\",\n          dataKey: \"value\",\n          label: true,\n          children: pieData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n            fill: COLORS[entry.name] || \"#8884d8\"\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"Sentiment Score Histogram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 500,\n        height: 300,\n        data: histogramData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          allowDecimals: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"count\",\n          fill: \"#3498db\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(SentimentCharts, \"PUqjgfw0ccPwtx6QxD6fWqJYeMQ=\");\n_c = SentimentCharts;\nexport default SentimentCharts;\nvar _c;\n$RefreshReg$(_c, \"SentimentCharts\");","map":{"version":3,"names":["React","useEffect","useState","PieChart","Pie","Cell","Tooltip","BarChart","Bar","XAxis","YAxis","CartesianGrid","Legend","fetchHistory","jsxDEV","_jsxDEV","SentimentCharts","_s","history","setHistory","loadHistory","console","log","data","Array","isArray","error","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sentimentCounts","reduce","acc","item","sentiment_label","pieData","Object","keys","map","key","name","value","COLORS","Positive","Neutral","Negative","bins","histogramData","bin","index","range","toFixed","count","filter","sentiment_score","width","height","cx","cy","outerRadius","fill","dataKey","label","entry","strokeDasharray","allowDecimals","_c","$RefreshReg$"],"sources":["/Users/vijayendrasai/Documents/Programming/Projects/Sentiment-Analysis-Dashboard/frontend-react/src/components/SentimentCharts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  Tooltip,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Legend,\n} from \"recharts\";\nimport { fetchHistory } from \"../api\"; // Import API call function\n\nconst SentimentCharts = () => {\n  const [history, setHistory] = useState([]);\n\n  useEffect(() => {\n    const loadHistory = async () => {\n      try {\n        console.log(\"Inside handleHistory\");\n        const data = await fetchHistory();\n        console.log(\"Fetched data:\", data);\n        if (Array.isArray(data)) {\n          setHistory(data);\n        } else {\n          console.error(\"Expected array, but got\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching history:\", error);\n      }\n    };\n\n    loadHistory();\n  }, []);\n\n  if (!history || history.length === 0) {\n    return <p className=\"text-center mt-4\">No sentiment data available.</p>;\n  }\n\n  // Count occurrences of each sentiment\n  const sentimentCounts = history.reduce((acc, item) => {\n    acc[item.sentiment_label] = (acc[item.sentiment_label] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Prepare Pie Chart Data\n  const pieData = Object.keys(sentimentCounts).map((key) => ({\n    name: key,\n    value: sentimentCounts[key],\n  }));\n\n  // Assign Colors for Pie Chart\n  const COLORS = {\n    Positive: \"#4CAF50\", // Green\n    Neutral: \"#FFC107\", // Yellow\n    Negative: \"#F44336\", // Red\n  };\n\n  // Prepare Histogram Data (Sentiment Score Ranges)\n  const bins = [0, 0.2, 0.4, 0.6, 0.8, 1.0];\n  const histogramData = bins.map((bin, index) => ({\n    range: `${bin.toFixed(1)} - ${\n      bins[index + 1] ? bins[index + 1].toFixed(1) : \"1.0\"\n    }`,\n    count: history.filter(\n      (item) =>\n        item.sentiment_score >= bin &&\n        item.sentiment_score < (bins[index + 1] || 1.01)\n    ).length,\n  }));\n\n  return (\n    <div className=\"p-4 flex flex-col items-center\">\n      <h2 className=\"text-xl font-bold mb-4\">Sentiment Analysis Charts</h2>\n\n      {/* Sentiment Distribution Pie Chart */}\n      <div className=\"mb-8\">\n        <h3 className=\"text-lg font-semibold mb-2\">Sentiment Distribution</h3>\n        <PieChart width={400} height={300}>\n          <Pie\n            data={pieData}\n            cx=\"50%\"\n            cy=\"50%\"\n            outerRadius={100}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            label\n          >\n            {pieData.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[entry.name] || \"#8884d8\"}\n              />\n            ))}\n          </Pie>\n          <Tooltip />\n        </PieChart>\n      </div>\n\n      {/* Sentiment Score Histogram */}\n      <div>\n        <h3 className=\"text-lg font-semibold mb-2\">\n          Sentiment Score Histogram\n        </h3>\n        <BarChart width={500} height={300} data={histogramData}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"range\" />\n          <YAxis allowDecimals={false} />\n          <Tooltip />\n          <Legend />\n          <Bar dataKey=\"count\" fill=\"#3498db\" />\n        </BarChart>\n      </div>\n    </div>\n  );\n};\n\nexport default SentimentCharts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}